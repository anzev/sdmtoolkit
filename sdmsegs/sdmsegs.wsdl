<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.example.org/sdmsegs/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="sdmsegs" targetNamespace="http://www.example.org/sdmsegs/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.example.org/sdmsegs/">
      <xsd:element name="runsdmsegs">
        <xsd:complexType>
          <xsd:sequence>

          	<xsd:element name="inputData" maxOccurs="unbounded"
          		minOccurs="1">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter is a list of pairs (id, rank).
          			</xsd:documentation>
          		</xsd:annotation>
          		<xsd:complexType>
          			<xsd:sequence>
          				<xsd:element name="id" type="xsd:integer"
          					maxOccurs="1" minOccurs="1">
          				</xsd:element>
          				<xsd:element name="rank_or_label"
          					type="xsd:string" maxOccurs="1" minOccurs="1">
          				</xsd:element>
          			</xsd:sequence>
          		</xsd:complexType>
          	</xsd:element>

          	<xsd:element name="interactions" maxOccurs="unbounded"
          		minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter is a list of pairs (id, id).
          			</xsd:documentation>
          		</xsd:annotation>
          		<xsd:complexType>
          			<xsd:sequence>
          				<xsd:element name="id1" type="xsd:integer"
          					maxOccurs="1" minOccurs="1">
          				</xsd:element>
          				<xsd:element name="id2" type="xsd:integer"
          					maxOccurs="1" minOccurs="1">
          				</xsd:element>
          			</xsd:sequence>
          		</xsd:complexType>
          	</xsd:element>

          	<xsd:element name="mapping" maxOccurs="unbounded" minOccurs="1">
          	     <xsd:annotation>
          			<xsd:documentation>
          				This parameter is a list of pairs [..., (id_i, [URI1, URI2, ...]), ...].
          			</xsd:documentation>
          		</xsd:annotation>
          		<xsd:complexType>
          			<xsd:sequence>
          				<xsd:element name="id" type="xsd:integer"
          					maxOccurs="1" minOccurs="1">
          				</xsd:element>
          				<xsd:element name="uri" type="xsd:string"
          					maxOccurs="unbounded" minOccurs="1">
          				</xsd:element>
          			</xsd:sequence>
          		</xsd:complexType>
          	</xsd:element>
          	<xsd:element name="ont1" type="xsd:string" maxOccurs="1"
          		minOccurs="1">
          		<xsd:annotation>
          			<xsd:documentation>
          				Input ontology.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="ont2" type="xsd:string" maxOccurs="1"
          		minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				Input ontology.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="ont3" type="xsd:string" maxOccurs="1"
          		minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				Input ontology.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="ont4" type="xsd:string" maxOccurs="1"
          		minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				Input ontology.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="posClassVal" type="xsd:string"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				The positive class value.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="wracc_k" type="xsd:integer"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				The maximum number of times an example can be
          				covered.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="cutoff" type="xsd:integer"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				Number of positive class value instances.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="generalTerms" type="xsd:string"
          		maxOccurs="unbounded" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				List of ontology terms that are too general.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="minimalSetSize" type="xsd:integer"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter specifies the minimal size of a
          				subgroup. The default value is 20.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="maxNumTerms" type="xsd:integer"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter specifies the maximum number of
          				terms that can define a resulting subgroup.
          				The default value is 3. WARNING: it is
          				recommended not to set this value higher than
          				3 otherwise the search may take a *very long*
          				time to complete!
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="maxReported" type="xsd:integer"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter specifies the upper limit of
          				reported subgroups. The default value is 100
          				which means that only the top 100 subgroups
          				sets will be reported.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="maximalPvalue" type="xsd:double"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter controlls the statistical
          				significance of the found sets. The default
          				value is 0.05.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>
          	<xsd:element name="weightFisher" type="xsd:double"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter controlls the user's preference
          				for Fisher test when computing the combined
          				p-value. The default value is 0.0
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>
          	<xsd:element name="weightGSEA" type="xsd:double"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter controlls the user's preference
          				for GSEA test when computing the combined
          				p-value. The default value is 1.0
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>
          	<xsd:element name="weightPAGE" type="xsd:double"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter controlls the user's preference
          				for PAGE test when computing the combined
          				p-value. The default value is 1.0
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>
          	<xsd:element name="summarizeDescriptions"
          		type="xsd:boolean" maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				This parameter specifies whether the
          				descriptions shall be summarized. Summarizing
          				the description is done by merging the
          				descriptions of similar sets, and removing
          				obsolete general terms. Two sets are similar
          				if the size of their symmetric difference is
          				less then 5% of the size of the smaller set,
          				and have the same p-value.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="randomSeed" type="xsd:integer"
          		maxOccurs="1" minOccurs="0">
          		<xsd:annotation>
          			<xsd:documentation>
          				Random seed.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>

          	<xsd:element name="legacy" type="xsd:boolean"
          		maxOccurs="1" minOccurs="1">
          	</xsd:element>
            
            <xsd:element name="level_ont1" type="xsd:integer"
                maxOccurs="1" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        From which level in the ontology do we have relevant concepts.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            
            <xsd:element name="level_ont2" type="xsd:integer"
                maxOccurs="1" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        From which level in the ontology do we have relevant concepts.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            
            <xsd:element name="level_ont3" type="xsd:integer"
                maxOccurs="1" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        From which level in the ontology do we have relevant concepts.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            
            <xsd:element name="level_ont4" type="xsd:integer"
                maxOccurs="1" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        From which level in the ontology do we have relevant concepts.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="runsdmsegsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="jobID" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResult">
          <xsd:complexType>
              <xsd:sequence>
                  <xsd:element name="jobID" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
              </xsd:sequence>
          </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResultResponse">
          <xsd:complexType>
              <xsd:sequence>
                  <xsd:element name="rules" type="tns:ruleComplexType" maxOccurs="unbounded" minOccurs="0">
                  </xsd:element>
              </xsd:sequence>
          </xsd:complexType>
      </xsd:element>
      <xsd:element name="getProgress">
          <xsd:complexType>
              <xsd:sequence>
                  <xsd:element name="jobID" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
              </xsd:sequence>
          </xsd:complexType>
      </xsd:element>
      <xsd:element name="getProgressResponse">
          <xsd:complexType>
              <xsd:sequence>
                  <xsd:element name="progress" type="xsd:integer"></xsd:element>
              </xsd:sequence>
          </xsd:complexType>
      </xsd:element>

     <xsd:complexType name="ruleComplexType">
          <xsd:sequence>
              <xsd:element name="description" type="tns:descriptionComplexType" maxOccurs="1"
                  minOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>This is the actual rule. It is composed of two parts: rule conjuncts and interacting terms.</xsd:documentation>
                        </xsd:annotation>
              </xsd:element>
              <xsd:element name="coveredGenes" type="xsd:string" maxOccurs="unbounded" minOccurs="1">
                  <xsd:annotation>
                      <xsd:documentation>This parameter is a list of all genes from the input data which are covered by the rule.</xsd:documentation></xsd:annotation></xsd:element>
              <xsd:element name="coveredTopGenes" type="xsd:string" maxOccurs="unbounded" minOccurs="1">
                  <xsd:annotation>
		    <xsd:documentation>This parameter is a list of top ranked genes from the input data which are covered by the rule.</xsd:documentation></xsd:annotation></xsd:element>
              <xsd:element name="wracc" type="xsd:double" maxOccurs="1" minOccurs="1">
                  <xsd:annotation>
                      <xsd:documentation>WRAcc score.</xsd:documentation></xsd:annotation></xsd:element>
          </xsd:sequence>
      </xsd:complexType>
      
      <xsd:complexType name="descriptionComplexType">
          <xsd:sequence>
              <xsd:element name="terms" type="tns:termComplexType" maxOccurs="unbounded"
                  minOccurs="0">
              </xsd:element>
              <xsd:element name="interactingTerms" type="tns:termComplexType" maxOccurs="unbounded"
                  minOccurs="0">
              </xsd:element>
          </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="termComplexType">
          <xsd:sequence>
              <xsd:element name="termID" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
              <xsd:element name="name" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
              <xsd:element name="domain" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
          </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="runsdmsegsRequest">
    <wsdl:part element="tns:runsdmsegs" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="runsdmsegsResponse">
    <wsdl:part element="tns:runsdmsegsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getResultRequest">
      <wsdl:part name="parameters" element="tns:getResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultResponse">
      <wsdl:part name="parameters" element="tns:getResultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProgressRequest">
      <wsdl:part name="parameters" element="tns:getProgress"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProgressResponse">
      <wsdl:part name="parameters" element="tns:getProgressResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="sdmsegs">
    <wsdl:operation name="runsdmsegs">
      <wsdl:input message="tns:runsdmsegsRequest"/>
      <wsdl:output message="tns:runsdmsegsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getResult">
        <wsdl:input message="tns:getResultRequest"></wsdl:input>
        <wsdl:output message="tns:getResultResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProgress">
        <wsdl:input message="tns:getProgressRequest"></wsdl:input>
        <wsdl:output message="tns:getProgressResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="sdmsegs" type="tns:sdmsegs">
      <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
      <wsdl:operation name="runsdmsegs">
          <soap:operation soapAction="http://www.example.org/sdmsegs/runsdmsegs" />
          <wsdl:input>
              <soap:body use="literal" />
          </wsdl:input>
          <wsdl:output>
              <soap:body use="literal" />
          </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="getResult">
          <soap:operation soapAction="http://www.example.org/sdmsegs/getResult" />
          <wsdl:input>
              <soap:body use="literal" />
          </wsdl:input>
          <wsdl:output>
              <soap:body use="literal" />
          </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="getProgress">
          <soap:operation soapAction="http://www.example.org/sdmsegs/getProgress" />
          <wsdl:input>
              <soap:body use="literal" />
          </wsdl:input>
          <wsdl:output>
              <soap:body use="literal" />
          </wsdl:output>
      </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="sdmsegs">
    <wsdl:port binding="tns:sdmsegs" name="sdmsegs">
      <soap:address location="http://www.example.org/sdmsegs"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
